// 类型安全- 强类型和弱类型
// 在语言层面是否限制参数的类型：在运行时抛出异常，而不是在语法或者编译时抛出错误
// 隐式类型转换
// 变量类型允许随时改变的特点，不是强弱类型的判断标志

// 类型检查 - 静态类型语言和动态类型语言：是否允许随时修改变量的类型

// JS类型系统特征：没有编译环节，脚本语言
// 弱类型语言的问题：
// 01 - 运行阶段才发现代码类型的异常
// 02 - 运行结果不正确
// 03 - 因为隐式转换使代码语义不明确：索引器的使用错误

// 强类型的优势：
// 01 - 错误更早的暴露
// 02 - 代码更智能，编码更准确
// 03 - 重构更牢靠
// 04 - 减少不必要的类型判断
