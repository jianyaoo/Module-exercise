1 - 简单题
谈一谈你是如何理解JS异步编程的，EventLoop、任务队列都是做什么的？什么是宏任务？什么是微任务？

JS异步编程：
JS异步编程的首要任务就是来提高JS单线程执行机制下的处理效率的，针对一些耗时操作及宿主环境下的api交互，例如接口的请求调用，文件的读写操作，消息发送及接收，通过异步编程的方式，都能得到很好的提升。
一般常见的异步处理方式有：回调函数、事件、Promise、Generator、Async Await等

EventLoop，任务队列
EventLoop是javaScript实现异步编程的一种执行机制。
JS是单线程语言，代码从上向下执行，所以在同步代码执行中，异步代码只有等待同步代码执行结束才会添加回事件队列中。
同步代码：依次存放到执行栈中，按序依次执行
异步代码：存放在任务队列中，任务队列又分为宏任务和微任务，当在stack中执行结束后存放到Queue中，当同步任务执行完毕后查看消息队列中是否有任务存在，有则取出执行。

宏任务：
script(整体代码)
setTimeout
setInterval
I/O
UI交互事件
postMessage
MessageChannel
setImmediate(Node.js 环境)

微任务：
Promise.then
Object.observe
MutaionObserver
process.nextTick(Node.js 环境)
